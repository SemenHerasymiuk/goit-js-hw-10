{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["const startButton = document.querySelector('[data-start]');\nconst datePicker = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet timerId = null;\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose: (selectedDates) => {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({ title: \"Error\", message: \"Please choose a date in the future\" });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\n\nflatpickr(datePicker, options);\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  datePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeDifference = userSelectedDate - now;\n\n    if (timeDifference <= 0) {\n      clearInterval(timerId);\n      iziToast.success({ title: \"Success\", message: \"Countdown completed!\" });\n      resetUI();\n      return;\n    }\n\n    const time = convertMs(timeDifference);\n    updateTimerUI(time);\n  }, 1000);\n});\n\nconst convertMs = (ms) => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nconst addLeadingZero = (value) => String(value).padStart(2, '0');\n\nconst updateTimerUI = ({ days, hours, minutes, seconds }) => {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n};\n\nconst resetUI = () => {\n  datePicker.disabled = false;\n  startButton.disabled = true;\n  daysEl.textContent = '00';\n  hoursEl.textContent = '00';\n  minutesEl.textContent = '00';\n  secondsEl.textContent = '00';\n};\n"],"names":["startButton","datePicker","daysEl","hoursEl","minutesEl","secondsEl","timerId","userSelectedDate","options","selectedDates","selectedDate","timeDifference","resetUI","time","convertMs","updateTimerUI","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"wFAAA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAU,KACVC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAUC,GAAkB,CAC1B,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtB,SAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChFV,EAAY,SAAW,KAEvBA,EAAY,SAAW,GACvBO,EAAmBG,EAEtB,CACH,EAEA,UAAUT,EAAYO,CAAO,EAE7BR,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAW,SAAW,GAEtBK,EAAU,YAAY,IAAM,CAE1B,MAAMK,EAAiBJ,EADX,IAAI,KAGhB,GAAII,GAAkB,EAAG,CACvB,cAAcL,CAAO,EACrB,SAAS,QAAQ,CAAE,MAAO,UAAW,QAAS,sBAAsB,CAAE,EACtEM,IACA,MACD,CAED,MAAMC,EAAOC,EAAUH,CAAc,EACrCI,EAAcF,CAAI,CACnB,EAAE,GAAI,CACT,CAAC,EAED,MAAMC,EAAaE,GAAO,CAMxB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,EAEMC,EAAkBC,GAAU,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAEzDP,EAAgB,CAAC,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,IAAO,CAC3DlB,EAAO,YAAcmB,EAAeJ,CAAI,EACxCd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,CAChD,EAEMR,EAAU,IAAM,CACpBX,EAAW,SAAW,GACtBD,EAAY,SAAW,GACvBE,EAAO,YAAc,KACrBC,EAAQ,YAAc,KACtBC,EAAU,YAAc,KACxBC,EAAU,YAAc,IAC1B"}